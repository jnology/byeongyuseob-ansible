---
- hosts: bastion_host
  become: yes
  tasks:
    - name: Check ping
      ping: 
      register: bastion_host_ping_result

- hosts: monitoring_agent
  become: yes
  pre_tasks:
    - name: Include secrets
      include_vars:
        file: ./files/secrets.yml
        name: secrets

  roles:
  - role: grafana
    vars:
      grafana_admin_password: "{{ secrets.grafana_admin_password }}"

  - role: prometheus.prometheus.prometheus
    vars:
      prometheus_alertmanager_config:
        - static_configs:
            - targets: ["localhost:9093"]
      prometheus_scrape_configs: 
        - job_name: 'ec2'
          ec2_sd_configs:
            - region: 'ap-northeast-2'
              port: 9100
          relabel_configs:
            - source_labels: [__meta_ec2_instance_id]
              target_label: instance_id
            - source_labels: [__meta_ec2_tag_Name]
              target_label: instance_name
            - source_labels: [__meta_ec2_private_ip]
              target_label: private_ip
            - source_labels: [__meta_ec2_availability_zone]
              target_label: az
            - source_labels: [__meta_ec2_tag_]
              target_label: cluster

  - role: prometheus.prometheus.alertmanager
    vars:
      alertmanager_slack_api_url: "{{ secrets.alertmanager_slack_api_url }}"
      alertmanager_receivers:
        - name: slack
          slack_configs:
            - send_resolved: true
              channel: '#alerts'
      alertmanager_route:
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 3h
        receiver: slack
        routes:
          - match:
              severity: critical
            receiver: slack

  tasks:
  - name: Copy slack.tpl to /etc/alertmanager/templates
    copy:
      src: ./files/alertmanager/slack.tpl
      dest: /etc/alertmanager/templates/slack.tpl
      owner: root
      group: root
      mode: '0644'
      force: no

  - name: Copy default.yml to /etc/prometheus/rules
    copy:
      src: ./files/prometheus/rules/default.rules
      dest: /etc/prometheus/rules/default.rules
      owner: root
      group: root
      mode: '0644'
      force: no

  - name: Restart Prometheus to apply the new templates
    systemd:
      state: restarted
      name: alertmanager

  - name: Restart Prometheus to apply the new rule
    systemd:
      state: restarted
      name: prometheus

  - name: Check Prometheus is running
    uri:
      url: "http://localhost:9090/-/healthy"
      status_code: 200
    register: result
    until: result.status == 200
    retries: 10
    delay: 10

  - name: Check Alertmanager is running
    uri:
      url: "http://localhost:9093/-/healthy"
      status_code: 200
    register: result
    until: result.status == 200
    retries: 10
    delay: 10

- hosts: monitoring_target
  become: yes
  become_user: root
  roles:
  - role: prometheus.prometheus.node_exporter
